<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d0/d09/classeCAL_1_1CServiceServer" kind="class" language="C++" prot="public">
    <compoundname>eCAL::CServiceServer</compoundname>
    <includes refid="d2/d4f/ecal__server_8h" local="no">ecal_server.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/d09/classeCAL_1_1CServiceServer_1ac5a6fd2f440ca58de937ad007319f33c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; CServiceServerImpl &gt;</type>
        <definition>std::shared_ptr&lt;CServiceServerImpl&gt; eCAL::CServiceServer::m_service_server_impl</definition>
        <argsstring></argsstring>
        <name>m_service_server_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="157" column="21" bodyfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d09/classeCAL_1_1CServiceServer_1aff4e0ad09c259b79000d66be1f9a3201" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eCAL::CServiceServer::m_created</definition>
        <argsstring></argsstring>
        <name>m_created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="158" column="41" bodyfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a4046992dbf0eaaf51dcc69d43e0f7d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API</type>
        <definition>ECAL_API eCAL::CServiceServer::CServiceServer</definition>
        <argsstring>()</argsstring>
        <name>CServiceServer</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="49" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a6db206279280c99f9deb829d475350e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API</type>
        <definition>ECAL_API eCAL::CServiceServer::CServiceServer</definition>
        <argsstring>(const std::string &amp;service_name_)</argsstring>
        <name>CServiceServer</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>service_name_</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique service name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="56" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a64a1e25a15d197e590672275696a35d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ECAL_API</type>
        <definition>virtual ECAL_API eCAL::CServiceServer::~CServiceServer</definition>
        <argsstring>()</argsstring>
        <name>~CServiceServer</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="61" column="22"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1ab4a5c2b8cc033a9375de8cc29829f289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API</type>
        <definition>ECAL_API eCAL::CServiceServer::CServiceServer</definition>
        <argsstring>(const CServiceServer &amp;)=delete</argsstring>
        <name>CServiceServer</name>
        <param>
          <type>const <ref refid="d0/d09/classeCAL_1_1CServiceServer" kindref="compound">CServiceServer</ref> &amp;</type>
        </param>
        <briefdescription>
<para>CServiceServers are non-copyable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="66" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a6f2a55da7ddd6cced90821ef02a0d58a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API <ref refid="d0/d09/classeCAL_1_1CServiceServer" kindref="compound">CServiceServer</ref> &amp;</type>
        <definition>ECAL_API CServiceServer&amp; eCAL::CServiceServer::operator=</definition>
        <argsstring>(const CServiceServer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d0/d09/classeCAL_1_1CServiceServer" kindref="compound">CServiceServer</ref> &amp;</type>
        </param>
        <briefdescription>
<para>CServiceServers are non-copyable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="71" column="29"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a3c7d5cbda958f2d4520061cd61376f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::Create</definition>
        <argsstring>(const std::string &amp;service_name_)</argsstring>
        <name>Create</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>service_name_</declname>
        </param>
        <briefdescription>
<para>Creates this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique service name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="80" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a82a28745c0d9a964bfcaac493cb47502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
<para>Destroys this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="87" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a40a09560ccdb6dc359db6c9b21ded042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::AddDescription</definition>
        <argsstring>(const std::string &amp;method_, const std::string &amp;req_type_, const std::string &amp;req_desc_, const std::string &amp;resp_type_, const std::string &amp;resp_desc_)</argsstring>
        <name>AddDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>method_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>req_type_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>req_desc_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>resp_type_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>resp_desc_</declname>
        </param>
        <briefdescription>
<para>Add method type descriptions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>method_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method request type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req_desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method request description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resp_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method response type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resp_desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method response description.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="100" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1af52167f5ef7b89bfff61ac48a1c46e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::AddMethodCallback</definition>
        <argsstring>(const std::string &amp;method_, const std::string &amp;req_type_, const std::string &amp;resp_type_, const MethodCallbackT &amp;callback_)</argsstring>
        <name>AddMethodCallback</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>method_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>req_type_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>resp_type_</declname>
        </param>
        <param>
          <type>const <ref refid="de/ddd/ecal__service__info_8h_1ae0436af7a525f2b5fcc30025def57c30" kindref="member">MethodCallbackT</ref> &amp;</type>
          <declname>callback_</declname>
        </param>
        <briefdescription>
<para>Add method callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>method_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method request type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resp_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method response type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for client request.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="112" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a300d466ffc32432b63474308e0eae390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::RemMethodCallback</definition>
        <argsstring>(const std::string &amp;method_)</argsstring>
        <name>RemMethodCallback</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>method_</declname>
        </param>
        <briefdescription>
<para>Remove method callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>method_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="121" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1ac36d0e836d65a6cca9fc48e37dedf27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::AddEventCallback</definition>
        <argsstring>(eCAL_Server_Event type_, ServerEventCallbackT callback_)</argsstring>
        <name>AddEventCallback</name>
        <param>
          <type>eCAL_Server_Event</type>
          <declname>type_</declname>
        </param>
        <param>
          <type><ref refid="df/d76/ecal__callback_8h_1a9b49337a63f0ad773c4490f21b7b8d5c" kindref="member">ServerEventCallbackT</ref></type>
          <declname>callback_</declname>
        </param>
        <briefdescription>
<para>Add server event callback function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type to react on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded, false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="131" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a4dcd631696a6aed9cc177a5763ac579f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::RemEventCallback</definition>
        <argsstring>(eCAL_Server_Event type_)</argsstring>
        <name>RemEventCallback</name>
        <param>
          <type>eCAL_Server_Event</type>
          <declname>type_</declname>
        </param>
        <briefdescription>
<para>Remove server event callback function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded, false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="140" column="19"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a04fe300dfd88f0ed3e2ca3f3fde7a479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API std::string</type>
        <definition>ECAL_API std::string eCAL::CServiceServer::GetServiceName</definition>
        <argsstring>()</argsstring>
        <name>GetServiceName</name>
        <briefdescription>
<para>Retrieve service name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The service name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="147" column="26"/>
      </memberdef>
      <memberdef kind="function" id="d0/d09/classeCAL_1_1CServiceServer_1a55c8a71b1f6d5cb1b70ab9317ed35a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool eCAL::CServiceServer::IsConnected</definition>
        <argsstring>()</argsstring>
        <name>IsConnected</name>
        <briefdescription>
<para>Check connection state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if connected, false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="154" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Service Server wrapper class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" line="43" column="3" bodyfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_server.h" bodystart="44" bodyend="159"/>
    <listofallmembers>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a40a09560ccdb6dc359db6c9b21ded042" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>AddDescription</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1ac36d0e836d65a6cca9fc48e37dedf27d" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>AddEventCallback</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1af52167f5ef7b89bfff61ac48a1c46e77" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>AddMethodCallback</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a3c7d5cbda958f2d4520061cd61376f74" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>Create</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a4046992dbf0eaaf51dcc69d43e0f7d78" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>CServiceServer</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a6db206279280c99f9deb829d475350e1" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>CServiceServer</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1ab4a5c2b8cc033a9375de8cc29829f289" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>CServiceServer</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a82a28745c0d9a964bfcaac493cb47502" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>Destroy</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a04fe300dfd88f0ed3e2ca3f3fde7a479" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>GetServiceName</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a55c8a71b1f6d5cb1b70ab9317ed35a07" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>IsConnected</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1aff4e0ad09c259b79000d66be1f9a3201" prot="private" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>m_created</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1ac5a6fd2f440ca58de937ad007319f33c" prot="private" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>m_service_server_impl</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a6f2a55da7ddd6cced90821ef02a0d58a" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>operator=</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a4dcd631696a6aed9cc177a5763ac579f" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>RemEventCallback</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a300d466ffc32432b63474308e0eae390" prot="public" virt="non-virtual"><scope>eCAL::CServiceServer</scope><name>RemMethodCallback</name></member>
      <member refid="d0/d09/classeCAL_1_1CServiceServer_1a64a1e25a15d197e590672275696a35d6" prot="public" virt="virtual"><scope>eCAL::CServiceServer</scope><name>~CServiceServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
