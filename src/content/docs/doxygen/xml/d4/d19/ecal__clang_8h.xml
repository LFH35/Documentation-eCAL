<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d4/d19/ecal__clang_8h" kind="file" language="C++">
    <compoundname>ecal_clang.h</compoundname>
    <includes refid="dd/d5d/ecalc_8h" local="no">ecal/ecalc.h</includes>
    <includes refid="dc/de4/ecal__deprecate_8h" local="no">ecal/ecal_deprecate.h</includes>
    <incdepgraph>
      <node id="11">
        <label>ecal/cimpl/ecal_monitoring_cimpl.h</label>
      </node>
      <node id="14">
        <label>ecal/cimpl/ecal_qos_cimpl.h</label>
      </node>
      <node id="4">
        <label>ecal/ecal_os.h</label>
        <link refid="d8/db1/ecal__os_8h"/>
      </node>
      <node id="18">
        <label>ecal/cimpl/ecal_time_cimpl.h</label>
      </node>
      <node id="1">
        <label>/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h</label>
        <link refid="d4/d19/ecal__clang_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ecal/cimpl/ecal_process_cimpl.h</label>
      </node>
      <node id="8">
        <label>ecal/cimpl/ecal_core_cimpl.h</label>
      </node>
      <node id="21">
        <label>ecal/cimpl/ecal_util_cimpl.h</label>
      </node>
      <node id="15">
        <label>ecal/cimpl/ecal_server_cimpl.h</label>
      </node>
      <node id="5">
        <label>ecal/ecal_defs.h</label>
      </node>
      <node id="16">
        <label>ecal/cimpl/ecal_subscriber_cimpl.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>ecal/ecalc.h</label>
        <link refid="dd/d5d/ecalc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ecal/cimpl/ecal_publisher_cimpl.h</label>
      </node>
      <node id="10">
        <label>ecal/cimpl/ecal_log_cimpl.h</label>
      </node>
      <node id="6">
        <label>ecal/ecalc_types.h</label>
        <link refid="d3/d8d/ecalc__types_8h"/>
      </node>
      <node id="9">
        <label>ecal/cimpl/ecal_event_cimpl.h</label>
      </node>
      <node id="19">
        <label>ecal/cimpl/ecal_timer_cimpl.h</label>
      </node>
      <node id="22">
        <label>ecal/ecal_deprecate.h</label>
        <link refid="dc/de4/ecal__deprecate_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ecal/cimpl/ecal_tlayer_cimpl.h</label>
      </node>
      <node id="17">
        <label>ecal/cimpl/ecal_proto_dyn_json_subscriber_cimpl.h</label>
      </node>
      <node id="7">
        <label>ecal/cimpl/ecal_client_cimpl.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a85b5ba3548d6163d0719f0cef2cd33e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API const char *</type>
        <definition>ECAL_API const char* ecal_getversion</definition>
        <argsstring>()</argsstring>
        <name>ecal_getversion</name>
        <briefdescription>
<para>Get eCAL version string. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>Full eCAL version string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="41" column="21" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="41" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a796502f49ee481c4c6cb99bcb19db6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int ecal_getversion_components</definition>
        <argsstring>(int *major_, int *minor_, int *patch_)</argsstring>
        <name>ecal_getversion_components</name>
        <param>
          <type>int *</type>
          <declname>major_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>patch_</declname>
        </param>
        <briefdescription>
<para>Get eCAL version as separated integer values. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">major_</parametername>
</parameternamelist>
<parameterdescription>
<para>The eCAL major version number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">minor_</parametername>
</parameternamelist>
<parameterdescription>
<para>The eCAL minor version number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">patch_</parametername>
</parameternamelist>
<parameterdescription>
<para>The eCAL patch version number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="54" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="54" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ad2b025124cfe6b21dfa19a1d85cf9bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API const char *</type>
        <definition>ECAL_API const char* ecal_getdate</definition>
        <argsstring>()</argsstring>
        <name>ecal_getdate</name>
        <briefdescription>
<para>Get eCAL version date. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>Full eCAL version date string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="63" column="21" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="63" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a29db94388ec381748e074a9df967909f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int ecal_initialize</definition>
        <argsstring>(int argc_, char **argv_, const char *unit_name_)</argsstring>
        <name>ecal_initialize</name>
        <param>
          <type>int</type>
          <declname>argc_</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>unit_name_</declname>
        </param>
        <briefdescription>
<para>Initialize eCAL API. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc_</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of command line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv_</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of command line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines the name of the eCAL unit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if succeeded, 1 if already initialized, -1 if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="76" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="76" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a1103d7dc1a86fa60c4ac72b2a7ee3ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int ecal_finalize</definition>
        <argsstring>()</argsstring>
        <name>ecal_finalize</name>
        <briefdescription>
<para>Finalize eCAL API. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>Zero if succeeded, 1 if already initialized, -1 if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="85" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="85" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1add52342efb58ef692522bdcd1ff2120f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int ecal_is_initialized</definition>
        <argsstring>()</argsstring>
        <name>ecal_is_initialized</name>
        <briefdescription>
<para>Check eCAL initialize state. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>1 if eCAL is initialized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="94" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="94" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1afb64cdd0f3741ff9eeb55f62d3aba563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int ecal_set_unit_name</definition>
        <argsstring>(const char *unit_name_)</argsstring>
        <name>ecal_set_unit_name</name>
        <param>
          <type>const char *</type>
          <declname>unit_name_</declname>
        </param>
        <briefdescription>
<para>Set/change the unit name of current module. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines the name of the eCAL unit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="105" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="105" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a739ac14ab29959f162491b39ef6d9e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_set_process_state</definition>
        <argsstring>(const int severity_, const int level_, const char *info_)</argsstring>
        <name>ecal_set_process_state</name>
        <param>
          <type>const int</type>
          <declname>severity_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>level_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>info_</declname>
        </param>
        <briefdescription>
<para>Set process state info. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>severity_</parametername>
</parameternamelist>
<parameterdescription>
<para>Severity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level_</parametername>
</parameternamelist>
<parameterdescription>
<para>Severity level. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info_</parametername>
</parameternamelist>
<parameterdescription>
<para>Info message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="117" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="117" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a95ed939a2965efd4ce0fca6f392586c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool ecal_ok</definition>
        <argsstring>()</argsstring>
        <name>ecal_ok</name>
        <briefdescription>
<para>Return the eCAL process state. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000009"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>True if eCAL is in proper state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="126" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="126" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ac7d866e489425b4d01e83a353a2fd6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_free_mem</definition>
        <argsstring>(void *mem_)</argsstring>
        <name>ecal_free_mem</name>
        <param>
          <type>void *</type>
          <declname>mem_</declname>
        </param>
        <briefdescription>
<para>Free an eCAL memory block allocated by functions like mon_get_monitoring, mon_get_logging, sub_receive, that let eCAL allocate the memory internally. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000010"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions. </para>
</xrefdescription></xrefsect><programlisting><codeline><highlight class="normal">//<sp/>let<sp/>eCAL<sp/>allocate<sp/>memory<sp/>for<sp/>the<sp/>subscriber<sp/>buffer<sp/>and<sp/>return<sp/>the<sp/>pointer<sp/>to<sp/>&apos;rcv_buf&apos;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>char*<sp/>rcv_buf<sp/><sp/><sp/><sp/><sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal">int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcv_buf_len<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">long<sp/>long<sp/><sp/><sp/>rcv_time<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret<sp/>=<sp/>sub_receive(subscriber_handle,<sp/>&amp;rcv_buf,<sp/>&amp;rcv_buf_len,<sp/>&amp;rcv_time,<sp/>timeout);</highlight></codeline>
<codeline><highlight class="normal">if(rcv_buf_len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>PROCESS<sp/>THE<sp/>BUFFER<sp/>CONTENT<sp/>HERE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>finally<sp/>free<sp/>the<sp/>allocated<sp/>memory</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ecal_free_mem((void*)rcv_buf);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="154" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="154" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a389240832a5d9030be12d6d9c3b5535a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_sleep_ms</definition>
        <argsstring>(const long time_ms_)</argsstring>
        <name>ecal_sleep_ms</name>
        <param>
          <type>const long</type>
          <declname>time_ms_</declname>
        </param>
        <briefdescription>
<para>Sleep current thread. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000011"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_ms_</parametername>
</parameternamelist>
<parameterdescription>
<para>Time to sleep in ms. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="163" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="163" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1aa10fa2d4385f260a23c368dab4f3c1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_shutdown_process_uname</definition>
        <argsstring>(const char *unit_name_)</argsstring>
        <name>ecal_shutdown_process_uname</name>
        <param>
          <type>const char *</type>
          <declname>unit_name_</declname>
        </param>
        <briefdescription>
<para>Send shutdown event to specified local user process using it&apos;s unit name. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000012"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Process unit name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="172" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="172" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1afbffe71ef65e928d4c5bee30f62f24c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_shutdown_process_id</definition>
        <argsstring>(const int process_id_)</argsstring>
        <name>ecal_shutdown_process_id</name>
        <param>
          <type>const int</type>
          <declname>process_id_</declname>
        </param>
        <briefdescription>
<para>Send shutdown event to specified local user process using it&apos;s process id. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000013"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>process_id_</parametername>
</parameternamelist>
<parameterdescription>
<para>Process id. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="181" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="181" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a45a4c94273c3b9e13cc40790da10c828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_shutdown_processes</definition>
        <argsstring>()</argsstring>
        <name>ecal_shutdown_processes</name>
        <briefdescription>
<para>Send shutdown event to all local user processes. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="188" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="188" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1aff7c0bddb1be0ad0c19de1a4b3ee91d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_shutdown_core</definition>
        <argsstring>()</argsstring>
        <name>ecal_shutdown_core</name>
        <briefdescription>
<para>Send shutdown event to all local core components. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000015"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="195" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="195" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a1c45cf4b32d38e7a2e3c0b3de00e5899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void ecal_enable_loopback</definition>
        <argsstring>(const int state_)</argsstring>
        <name>ecal_enable_loopback</name>
        <param>
          <type>const int</type>
          <declname>state_</declname>
        </param>
        <briefdescription>
<para>Enable eCAL message loop back, that means subscriber will receive messages from publishers of the same process (default == false). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000016"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state_</parametername>
</parameternamelist>
<parameterdescription>
<para>Switch on message loop back.. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="206" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="206" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a223cd64b3c0fe18b5a7f4084fb3e56cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool ecal_get_type_name</definition>
        <argsstring>(const char *topic_name_, const char **topic_type_, int *topic_type_len_)</argsstring>
        <name>ecal_get_type_name</name>
        <param>
          <type>const char *</type>
          <declname>topic_name_</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>topic_type_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>topic_type_len_</declname>
        </param>
        <briefdescription>
<para>Gets type name of the specified topic. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000017"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">topic_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the type name information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">topic_type_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of allocated buffer, eCAL is allocating the buffer for you, use ecal_free_mem to free the buffer finally.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="220" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="220" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a3e88be288c916c094abc717579f4f85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool ecal_get_description</definition>
        <argsstring>(const char *topic_name_, const char **topic_desc_, int *topic_desc_len_)</argsstring>
        <name>ecal_get_description</name>
        <param>
          <type>const char *</type>
          <declname>topic_name_</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>topic_desc_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>topic_desc_len_</declname>
        </param>
        <briefdescription>
<para>Gets type description of the specified topic. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000018"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">topic_desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the type description information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">topic_desc_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of allocated buffer, eCAL is allocating the buffer for you, use ecal_free_mem to free the buffer finally.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="234" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="234" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a8734995133d0e2808ff66274ff7d7512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void log_setlevel</definition>
        <argsstring>(const int level_)</argsstring>
        <name>log_setlevel</name>
        <param>
          <type>const int</type>
          <declname>level_</declname>
        </param>
        <briefdescription>
<para>Sets the log level. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000019"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level_</parametername>
</parameternamelist>
<parameterdescription>
<para>The level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="246" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="246" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ad6ab32ac524e11ecff49c04e50ee418d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void log_setcoretime</definition>
        <argsstring>(const double time_)</argsstring>
        <name>log_setcoretime</name>
        <param>
          <type>const double</type>
          <declname>time_</declname>
        </param>
        <briefdescription>
<para>Set the current measured core time in s (for user implemented measuring). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000020"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_</parametername>
</parameternamelist>
<parameterdescription>
<para>The core time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="255" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="255" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1aecd889bfd46bf7ce7549b249c405fb15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API void</type>
        <definition>ECAL_API void log_message</definition>
        <argsstring>(const char *message_)</argsstring>
        <name>log_message</name>
        <param>
          <type>const char *</type>
          <declname>message_</declname>
        </param>
        <briefdescription>
<para>Log a message (with current log level). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000021"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message_</parametername>
</parameternamelist>
<parameterdescription>
<para>The log message string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="264" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="264" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ab77da4eb0646292a113b9025a2dd38c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API <ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
        <definition>ECAL_API ECAL_HANDLE pub_create</definition>
        <argsstring>(const char *topic_name_, const char *topic_type_)</argsstring>
        <name>pub_create</name>
        <param>
          <type>const char *</type>
          <declname>topic_name_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic_type_</declname>
        </param>
        <briefdescription>
<para>Create a publisher. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000022"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique topic name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic type name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle of the created publisher or NULL if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="279" column="22" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="279" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a02d6437f4a1da37f22bfd7d9efbf3f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_destroy</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>pub_destroy</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Destroy a publisher. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000023"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="290" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="290" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1addc7cfbd8c81984c68af33dbf437ff01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_set_type_name</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *topic_type_name_, const int topic_type_name_length_)</argsstring>
        <name>pub_set_type_name</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic_type_name_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>topic_type_name_length_</declname>
        </param>
        <briefdescription>
<para>Setup topic type name. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000024"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic_type_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic type name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic_type_name_length_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic type name length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="303" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="303" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1aaacbcd254d94c68c9a61fae235101c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_set_description</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *topic_desc_, const int topic_desc_length_)</argsstring>
        <name>pub_set_description</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic_desc_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>topic_desc_length_</declname>
        </param>
        <briefdescription>
<para>Setup topic type description. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000025"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic_desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic type description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic_desc_length_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic type description length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="316" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="316" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a81bf79f82c3f19bc7c0de5e9f90c9f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_set_qos</definition>
        <argsstring>(ECAL_HANDLE handle_, struct SWriterQOSC qos_)</argsstring>
        <name>pub_set_qos</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>struct SWriterQOSC</type>
          <declname>qos_</declname>
        </param>
        <briefdescription>
<para>Set publisher quality of service attributes. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000026"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qos_</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of service policies.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="328" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="328" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a29c50810681e482f364404cf93366e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_get_qos</definition>
        <argsstring>(ECAL_HANDLE handle_, struct SWriterQOSC *qos_)</argsstring>
        <name>pub_get_qos</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>struct SWriterQOSC *</type>
          <declname>qos_</declname>
        </param>
        <briefdescription>
<para>Get publisher quality of service attributes. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000027"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qos_</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of service policies.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="340" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="340" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a8cb6f20f940c0e54231c78e47c5bc920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_set_layer_mode</definition>
        <argsstring>(ECAL_HANDLE handle_, const int layer_, const int mode_)</argsstring>
        <name>pub_set_layer_mode</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>layer_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>mode_</declname>
        </param>
        <briefdescription>
<para>Set publisher send mode for specific transport layer. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000028"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer_</parametername>
</parameternamelist>
<parameterdescription>
<para>Transport layer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode_</parametername>
</parameternamelist>
<parameterdescription>
<para>Send mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="353" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="353" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ad7cad459dd949ef83ec948ce20d8da1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_set_max_bandwidth_udp</definition>
        <argsstring>(ECAL_HANDLE handle_, long bandwidth_)</argsstring>
        <name>pub_set_max_bandwidth_udp</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bandwidth_</declname>
        </param>
        <briefdescription>
<para>Set publisher maximum transmit bandwidth for the udp layer. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000029"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bandwidth_</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum bandwidth in bytes/s (-1 == unlimited).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="365" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="365" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a0e2c1a29a1336083f2d19db5a1a2d4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int pub_send</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *payload_, const int length_, const long long time_)</argsstring>
        <name>pub_send</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>payload_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>length_</declname>
        </param>
        <param>
          <type>const long long</type>
          <declname>time_</declname>
        </param>
        <briefdescription>
<para>Send a message to all subscribers. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000030"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer that contains content to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length_</parametername>
</parameternamelist>
<parameterdescription>
<para>Send buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_</parametername>
</parameternamelist>
<parameterdescription>
<para>Send time (-1 = use eCAL system time in us, default = -1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes sent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="379" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="379" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a771d86ab58f9ccfe0152329f93238da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int pub_send_sync</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *payload_, const int length_, const long long time_, const long long acknowledge_timeout_ms_)</argsstring>
        <name>pub_send_sync</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>payload_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>length_</declname>
        </param>
        <param>
          <type>const long long</type>
          <declname>time_</declname>
        </param>
        <param>
          <type>const long long</type>
          <declname>acknowledge_timeout_ms_</declname>
        </param>
        <briefdescription>
<para>Send a message to all subscribers synchronized with acknowledge timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000031"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para>This synchronized mode is currently implemented for local interprocess communication (shm-ecal layer) only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer that contains content to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_</parametername>
</parameternamelist>
<parameterdescription>
<para>Send time (-1 = use eCAL system time in us). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acknowledge_timeout_ms_</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time to wait for all subscribers acknowledge feedback in ms (content received and processed).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes sent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="396" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="396" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a826c12557d26a778aeca0900e0026dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_add_event_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, enum eCAL_Publisher_Event type_, const PubEventCallbackCT callback_, void *par_)</argsstring>
        <name>pub_add_event_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>enum eCAL_Publisher_Event</type>
          <declname>type_</declname>
        </param>
        <param>
          <type>const PubEventCallbackCT</type>
          <declname>callback_</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>par_</declname>
        </param>
        <briefdescription>
<para>Add callback function for publisher events. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000032"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type to react on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>par_</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined context that will be forwarded to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="410" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="410" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a3c4548baa30604c6f790adb4cc2c3438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool pub_rem_event_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, enum eCAL_Publisher_Event type_)</argsstring>
        <name>pub_rem_event_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>enum eCAL_Publisher_Event</type>
          <declname>type_</declname>
        </param>
        <briefdescription>
<para>Remove callback function for publisher events. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000033"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Publisher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="422" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="422" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a1831f04989002bff9548bfc18f35bcc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API <ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
        <definition>ECAL_API ECAL_HANDLE sub_create</definition>
        <argsstring>(const char *topic_name_, const char *topic_type_)</argsstring>
        <name>sub_create</name>
        <param>
          <type>const char *</type>
          <declname>topic_name_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic_type_</declname>
        </param>
        <briefdescription>
<para>Create a subscriber. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000034"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique topic name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic type name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle of the created subscriber or NULL if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="437" column="22" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="437" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1afe3c3a74ccfa61f0d811befc8d40f60a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_destroy</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>sub_destroy</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Destroy a subscriber. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000035"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="448" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="448" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1abc7e3b35431d935887d7484a390362d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_set_qos</definition>
        <argsstring>(ECAL_HANDLE handle_, struct SReaderQOSC qos_)</argsstring>
        <name>sub_set_qos</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>struct SReaderQOSC</type>
          <declname>qos_</declname>
        </param>
        <briefdescription>
<para>Set subscriber quality of service attributes. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000036"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qos_</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of service policies.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="460" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="460" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1abc58eef47fc5fa983d5d8a72af212a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_get_qos</definition>
        <argsstring>(ECAL_HANDLE handle_, struct SReaderQOSC *qos_)</argsstring>
        <name>sub_get_qos</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>struct SReaderQOSC *</type>
          <declname>qos_</declname>
        </param>
        <briefdescription>
<para>Get subscriber quality of service attributes. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000037"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qos_</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of service policies.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="472" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="472" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a1ec1f718a0335eb6844c47e3f58c2398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int sub_receive</definition>
        <argsstring>(ECAL_HANDLE handle_, const char **rcv_buf_, int *rcv_buf_len_, long long *rcv_time_, const int timeout_)</argsstring>
        <name>sub_receive</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>rcv_buf_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rcv_buf_len_</declname>
        </param>
        <param>
          <type>long long *</type>
          <declname>rcv_time_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>timeout_</declname>
        </param>
        <briefdescription>
<para>Receive a message from the publisher. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000038"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rcv_buf_</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the received message content. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rcv_buf_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of allocated buffer, eCAL is allocating the buffer for you, use ecal_free_mem to free the buffer finally. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rcv_time_</parametername>
</parameternamelist>
<parameterdescription>
<para>Time from publisher in us. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time before receive operation returns (in milliseconds, -1 means infinite).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of received buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="488" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="488" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ac6cdc9785b833cd571c373aab28794d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_receive_buffer</definition>
        <argsstring>(ECAL_HANDLE handle_, const char **rcv_buf_, int *rcv_buf_len_, long long *rcv_time_, const int timeout_)</argsstring>
        <name>sub_receive_buffer</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>rcv_buf_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rcv_buf_len_</declname>
        </param>
        <param>
          <type>long long *</type>
          <declname>rcv_time_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>timeout_</declname>
        </param>
        <briefdescription>
<para>Receive a message from the publisher (able to process zero length buffer). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000039"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rcv_buf_</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the received message content. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rcv_buf_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of allocated buffer, eCAL is allocating the buffer for you, use ecal_free_mem to free the buffer finally. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rcv_time_</parametername>
</parameternamelist>
<parameterdescription>
<para>Time from publisher in us. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time before receive operation returns (in milliseconds, -1 means infinite).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="504" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="504" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a67be84fdf2f94a25f18d4bcb58f66551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_add_receive_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, const ReceiveCallbackCT callback_, void *par_)</argsstring>
        <name>sub_add_receive_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const ReceiveCallbackCT</type>
          <declname>callback_</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>par_</declname>
        </param>
        <briefdescription>
<para>Add callback function for incoming receives. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000040"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>par_</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined context that will be forwarded to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="517" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="517" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a5423009de750bc100d6fd3ff088f20f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_rem_receive_callback</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>sub_rem_receive_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Remove callback function for incoming receives. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000041"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="528" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="528" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1aa157db0be5fa32d82450030b094cf0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_add_event_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, enum eCAL_Subscriber_Event type_, const SubEventCallbackCT callback_, void *par_)</argsstring>
        <name>sub_add_event_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>enum eCAL_Subscriber_Event</type>
          <declname>type_</declname>
        </param>
        <param>
          <type>const SubEventCallbackCT</type>
          <declname>callback_</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>par_</declname>
        </param>
        <briefdescription>
<para>Add callback function for subscriber events. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000042"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type to react on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>par_</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined context that will be forwarded to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="542" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="542" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a326dd7ba23bbd7df7c28038a5914928d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_rem_event_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, enum eCAL_Subscriber_Event type_)</argsstring>
        <name>sub_rem_event_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>enum eCAL_Subscriber_Event</type>
          <declname>type_</declname>
        </param>
        <briefdescription>
<para>Remove callback function for subscriber events. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000043"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="554" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="554" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1aeb563351d862ff01fb009e307d76292d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool sub_set_timeout</definition>
        <argsstring>(ECAL_HANDLE handle_, int timeout_)</argsstring>
        <name>sub_set_timeout</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_</declname>
        </param>
        <briefdescription>
<para>Set the timeout parameter for triggering the timeout callback. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000044"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_</parametername>
</parameternamelist>
<parameterdescription>
<para>The timeout in milliseconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="567" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="567" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a829d5fbcae1f370afe411a44065fbcd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API <ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
        <definition>ECAL_API ECAL_HANDLE dyn_json_sub_create</definition>
        <argsstring>(const char *topic_name_)</argsstring>
        <name>dyn_json_sub_create</name>
        <param>
          <type>const char *</type>
          <declname>topic_name_</declname>
        </param>
        <briefdescription>
<para>Create a subscriber. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000045"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique topic name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle to created subscriber or NULL if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="581" column="22" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="581" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a0aed2c922b11b65e57b28055de17c421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool dyn_json_sub_destroy</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>dyn_json_sub_destroy</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Destroy a subscriber. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000046"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="592" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="592" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ada98267a58dec836697704b3c495d580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool dyn_json_sub_add_receive_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, const ReceiveCallbackCT callback_, void *par_)</argsstring>
        <name>dyn_json_sub_add_receive_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const ReceiveCallbackCT</type>
          <declname>callback_</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>par_</declname>
        </param>
        <briefdescription>
<para>Add callback function for incoming receives. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000047"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>par_</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined context that will be forwarded to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="605" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="605" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ad5563ed5725905ab6cb5266f3000813f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool dyn_json_sub_rem_receive_callback</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>dyn_json_sub_rem_receive_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Remove callback function for incoming receives. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000048"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscriber handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="616" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="616" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a877acafc2048df1d6e9e197e5ce85caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API <ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
        <definition>ECAL_API ECAL_HANDLE server_create</definition>
        <argsstring>(const char *service_name_)</argsstring>
        <name>server_create</name>
        <param>
          <type>const char *</type>
          <declname>service_name_</declname>
        </param>
        <briefdescription>
<para>Create a server. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000049"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle to created server or NULL if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="635" column="22" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="635" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a06eaa7aa946da64ff339bc07bdf1f635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool server_destroy</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>server_destroy</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Destroy a server. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000050"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Server handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="646" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="646" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ae6d216f6f783783ef482782995a7ebcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool server_add_method_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *method_name_, const char *req_type_, const char *resp_type_, const MethodCallbackCT callback_, void *par_)</argsstring>
        <name>server_add_method_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method_name_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>req_type_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>resp_type_</declname>
        </param>
        <param>
          <type>const MethodCallbackCT</type>
          <declname>callback_</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>par_</declname>
        </param>
        <briefdescription>
<para>Add server method callback. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000051"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Server handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Method request type (default = &quot;&quot;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resp_type_</parametername>
</parameternamelist>
<parameterdescription>
<para>Method response type (default = &quot;&quot;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for server request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>par_</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined context that will be forwarded to the request function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="662" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="662" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a0a877a4b626654a13403022e8f2d7447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool server_rem_method_callback</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *method_name_)</argsstring>
        <name>server_rem_method_callback</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method_name_</declname>
        </param>
        <briefdescription>
<para>Remove server method callback. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000052"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Server handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service method name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="674" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="674" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a10bdcde88fbe9b6c7491b2b3ba794e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API <ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
        <definition>ECAL_API ECAL_HANDLE client_create</definition>
        <argsstring>(const char *service_name_)</argsstring>
        <name>client_create</name>
        <param>
          <type>const char *</type>
          <declname>service_name_</declname>
        </param>
        <briefdescription>
<para>Create a client. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000053"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Service name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle to created client or NULL if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="685" column="22" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="685" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a7acefeb93d842698df5ade150870d107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool client_destroy</definition>
        <argsstring>(ECAL_HANDLE handle_)</argsstring>
        <name>client_destroy</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <briefdescription>
<para>Destroy a client. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000054"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Client handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="696" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="696" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ade6b59f214874534a6518be2f186eaa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool client_set_hostname</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *host_name_)</argsstring>
        <name>client_set_hostname</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host_name_</declname>
        </param>
        <briefdescription>
<para>Change the host name filter for that client instance. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000055"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Client handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Host name filter (empty or &quot;*&quot; == all hosts)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="708" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="708" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a8f33dfb4c563e82391cb4a0e3d1b0089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool client_call_method</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *method_name_, const char *request_, const int request_len_, const int timeout_)</argsstring>
        <name>client_call_method</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method_name_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>request_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>request_len_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>timeout_</declname>
        </param>
        <briefdescription>
<para>Call method of this service (none blocking variant with callback). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000056"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Client handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Method name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_</parametername>
</parameternamelist>
<parameterdescription>
<para>Request message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Request message length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time before operation returns (in milliseconds, -1 means infinite).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="723" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="723" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a7b5e4e316b89e78eef3da213d4f9dd8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API bool</type>
        <definition>ECAL_API bool client_call_method_async</definition>
        <argsstring>(ECAL_HANDLE handle_, const char *method_name_, const char *request_, const int request_len_, const int timeout_)</argsstring>
        <name>client_call_method_async</name>
        <param>
          <type><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref></type>
          <declname>handle_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method_name_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>request_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>request_len_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>timeout_</declname>
        </param>
        <briefdescription>
<para>Call method of this service (asynchronously with callback). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000057"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_</parametername>
</parameternamelist>
<parameterdescription>
<para>Client handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method_name_</parametername>
</parameternamelist>
<parameterdescription>
<para>Method name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_</parametername>
</parameternamelist>
<parameterdescription>
<para>Request message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Request message length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum time before operation returns (in milliseconds, -1 means infinite).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="738" column="15" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="738" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ad7fb789b30d8884c876eee8c0bfdb6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_initialize</definition>
        <argsstring>()</argsstring>
        <name>mon_initialize</name>
        <briefdescription>
<para>Initialize eCAL monitoring API. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000058"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>Zero if succeeded, 1 if already initialized, -1 if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="755" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="755" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ac165329dc942cd7404144c1347254466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_finalize</definition>
        <argsstring>()</argsstring>
        <name>mon_finalize</name>
        <briefdescription>
<para>Finalize eCAL monitoring API. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000059"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>Zero if succeeded, 1 if already initialized, -1 if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="764" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="764" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a231586e73852b9f617c11156a617bf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_set_excl_filter</definition>
        <argsstring>(const char *filter_)</argsstring>
        <name>mon_set_excl_filter</name>
        <param>
          <type>const char *</type>
          <declname>filter_</declname>
        </param>
        <briefdescription>
<para>Set topics filter blacklist regular expression. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000060"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic filter as regular expression.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="775" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="775" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ab79620db2c3a73f17c5e91fe766b62a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_set_incl_filter</definition>
        <argsstring>(const char *filter_)</argsstring>
        <name>mon_set_incl_filter</name>
        <param>
          <type>const char *</type>
          <declname>filter_</declname>
        </param>
        <briefdescription>
<para>Set topics filter whitelist regular expression. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000061"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter_</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic filter as regular expression.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="786" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="786" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1ae4866992ca07ca8bdc77c458c7c0d6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_set_filter_state</definition>
        <argsstring>(const bool state_)</argsstring>
        <name>mon_set_filter_state</name>
        <param>
          <type>const bool</type>
          <declname>state_</declname>
        </param>
        <briefdescription>
<para>Switch topics filter using regular expression on/off. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000062"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state_</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter on / off state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if succeeded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="797" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="797" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a9a8ce626e7c7ceb6f4c5ce5b44512212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_get_monitoring</definition>
        <argsstring>(const char **mon_buf_, int *mon_buf_len_)</argsstring>
        <name>mon_get_monitoring</name>
        <param>
          <type>const char **</type>
          <declname>mon_buf_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mon_buf_len_</declname>
        </param>
        <briefdescription>
<para>Get monitoring protobuf string. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000063"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">mon_buf_</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the monitoring information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mon_buf_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of allocated buffer, eCAL is allocating the buffer for you, use ecal_free_mem to free the buffer finally.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Monitoring buffer length or zero if failed. <programlisting><codeline><highlight class="normal">//<sp/>let<sp/>eCAL<sp/>allocate<sp/>memory<sp/>for<sp/>the<sp/>monitoring<sp/>buffer<sp/>and<sp/>return<sp/>the<sp/>pointer<sp/>to<sp/>&apos;buf&apos;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>char*<sp/>mon_buf_<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mon_buf_len_<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">mon_get_monitoring(subscriber_handle,<sp/>&amp;mon_buf_,<sp/>&amp;mon_buf_len_);</highlight></codeline>
<codeline><highlight class="normal">if(mon_buf_len_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>PROCESS<sp/>THE<sp/>BUFFER<sp/>CONTENT<sp/>HERE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>finally<sp/>free<sp/>the<sp/>allocated<sp/>memory</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ecal_free_mem(((void*)rcv_buf););</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="826" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="826" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d4/d19/ecal__clang_8h_1a98af3629ed3891b91b34d62071e68f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ECAL_API int</type>
        <definition>ECAL_API int mon_get_logging</definition>
        <argsstring>(const char **log_buf_, int *log_buf_len_)</argsstring>
        <name>mon_get_logging</name>
        <param>
          <type>const char **</type>
          <declname>log_buf_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>log_buf_len_</declname>
        </param>
        <briefdescription>
<para>Get logging string. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="da/d58/deprecated_1_deprecated000064"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Will be removed in future eCAL versions.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">log_buf_</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the monitoring information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">log_buf_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of allocated buffer, eCAL is allocating the buffer for you, use ecal_free_mem to free the buffer finally.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Logging buffer length or zero if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" line="839" column="14" declfile="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h" declline="839" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>eCAL C language interface, to wrap ecal into other languages easily (deprecated, will be removed in future eCAL versions) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>=========================<sp/>eCAL<sp/>LICENSE<sp/>=================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2019<sp/>Continental<sp/>Corporation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>=========================<sp/>eCAL<sp/>LICENSE<sp/>=================================</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ECAL_CLANG_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECAL_CLANG_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dd/d5d/ecalc_8h" kindref="compound">ecal/ecalc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dc/de4/ecal__deprecate_8h" kindref="compound">ecal/ecal_deprecate.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>common<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(</highlight><highlight class="stringliteral">&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41" refid="d4/d19/ecal__clang_8h_1a85b5ba3548d6163d0719f0cef2cd33e6" refkind="member"><highlight class="normal">ECAL_API<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d4/d19/ecal__clang_8h_1a85b5ba3548d6163d0719f0cef2cd33e6" kindref="member">ecal_getversion</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="54" refid="d4/d19/ecal__clang_8h_1a796502f49ee481c4c6cb99bcb19db6d9" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a796502f49ee481c4c6cb99bcb19db6d9" kindref="member">ecal_getversion_components</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>major_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>minor_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>patch_);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="63" refid="d4/d19/ecal__clang_8h_1ad2b025124cfe6b21dfa19a1d85cf9bb7" refkind="member"><highlight class="normal">ECAL_API<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d4/d19/ecal__clang_8h_1ad2b025124cfe6b21dfa19a1d85cf9bb7" kindref="member">ecal_getdate</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="76" refid="d4/d19/ecal__clang_8h_1a29db94388ec381748e074a9df967909f" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a29db94388ec381748e074a9df967909f" kindref="member">ecal_initialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc_,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>unit_name_);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="85" refid="d4/d19/ecal__clang_8h_1a1103d7dc1a86fa60c4ac72b2a7ee3ffc" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a1103d7dc1a86fa60c4ac72b2a7ee3ffc" kindref="member">ecal_finalize</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="94" refid="d4/d19/ecal__clang_8h_1add52342efb58ef692522bdcd1ff2120f" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1add52342efb58ef692522bdcd1ff2120f" kindref="member">ecal_is_initialized</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="105" refid="d4/d19/ecal__clang_8h_1afb64cdd0f3741ff9eeb55f62d3aba563" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1afb64cdd0f3741ff9eeb55f62d3aba563" kindref="member">ecal_set_unit_name</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unit_name_);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="117" refid="d4/d19/ecal__clang_8h_1a739ac14ab29959f162491b39ef6d9e39" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a739ac14ab29959f162491b39ef6d9e39" kindref="member">ecal_set_process_state</ref>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>severity_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>info_);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="126" refid="d4/d19/ecal__clang_8h_1a95ed939a2965efd4ce0fca6f392586c3" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a95ed939a2965efd4ce0fca6f392586c3" kindref="member">ecal_ok</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="154" refid="d4/d19/ecal__clang_8h_1ac7d866e489425b4d01e83a353a2fd6e9" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ac7d866e489425b4d01e83a353a2fd6e9" kindref="member">ecal_free_mem</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mem_);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="163" refid="d4/d19/ecal__clang_8h_1a389240832a5d9030be12d6d9c3b5535a" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a389240832a5d9030be12d6d9c3b5535a" kindref="member">ecal_sleep_ms</ref>(const<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time_ms_);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="172" refid="d4/d19/ecal__clang_8h_1aa10fa2d4385f260a23c368dab4f3c1bc" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1aa10fa2d4385f260a23c368dab4f3c1bc" kindref="member">ecal_shutdown_process_uname</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>unit_name_);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="181" refid="d4/d19/ecal__clang_8h_1afbffe71ef65e928d4c5bee30f62f24c6" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1afbffe71ef65e928d4c5bee30f62f24c6" kindref="member">ecal_shutdown_process_id</ref>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>process_id_);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="188" refid="d4/d19/ecal__clang_8h_1a45a4c94273c3b9e13cc40790da10c828" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a45a4c94273c3b9e13cc40790da10c828" kindref="member">ecal_shutdown_processes</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="195" refid="d4/d19/ecal__clang_8h_1aff7c0bddb1be0ad0c19de1a4b3ee91d1" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1aff7c0bddb1be0ad0c19de1a4b3ee91d1" kindref="member">ecal_shutdown_core</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="206" refid="d4/d19/ecal__clang_8h_1a1c45cf4b32d38e7a2e3c0b3de00e5899" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a1c45cf4b32d38e7a2e3c0b3de00e5899" kindref="member">ecal_enable_loopback</ref>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="220" refid="d4/d19/ecal__clang_8h_1a223cd64b3c0fe18b5a7f4084fb3e56cc" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a223cd64b3c0fe18b5a7f4084fb3e56cc" kindref="member">ecal_get_type_name</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>topic_type_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>topic_type_len_);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="234" refid="d4/d19/ecal__clang_8h_1a3e88be288c916c094abc717579f4f85c" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a3e88be288c916c094abc717579f4f85c" kindref="member">ecal_get_description</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>topic_desc_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>topic_desc_len_);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>logging<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="246" refid="d4/d19/ecal__clang_8h_1a8734995133d0e2808ff66274ff7d7512" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a8734995133d0e2808ff66274ff7d7512" kindref="member">log_setlevel</ref>(const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level_);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="255" refid="d4/d19/ecal__clang_8h_1ad6ab32ac524e11ecff49c04e50ee418d" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ad6ab32ac524e11ecff49c04e50ee418d" kindref="member">log_setcoretime</ref>(const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="264" refid="d4/d19/ecal__clang_8h_1aecd889bfd46bf7ce7549b249c405fb15" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1aecd889bfd46bf7ce7549b249c405fb15" kindref="member">log_message</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message_);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>publisher<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="279" refid="d4/d19/ecal__clang_8h_1ab77da4eb0646292a113b9025a2dd38c7" refkind="member"><highlight class="normal">ECAL_API<sp/><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/><ref refid="d4/d19/ecal__clang_8h_1ab77da4eb0646292a113b9025a2dd38c7" kindref="member">pub_create</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_type_);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="290" refid="d4/d19/ecal__clang_8h_1a02d6437f4a1da37f22bfd7d9efbf3f15" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a02d6437f4a1da37f22bfd7d9efbf3f15" kindref="member">pub_destroy</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="303" refid="d4/d19/ecal__clang_8h_1addc7cfbd8c81984c68af33dbf437ff01" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1addc7cfbd8c81984c68af33dbf437ff01" kindref="member">pub_set_type_name</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_type_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topic_type_name_length_);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="316" refid="d4/d19/ecal__clang_8h_1aaacbcd254d94c68c9a61fae235101c5c" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1aaacbcd254d94c68c9a61fae235101c5c" kindref="member">pub_set_description</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_desc_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topic_desc_length_);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="328" refid="d4/d19/ecal__clang_8h_1a81bf79f82c3f19bc7c0de5e9f90c9f20" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a81bf79f82c3f19bc7c0de5e9f90c9f20" kindref="member">pub_set_qos</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>struct<sp/>SWriterQOSC<sp/>qos_);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="340" refid="d4/d19/ecal__clang_8h_1a29c50810681e482f364404cf93366e58" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a29c50810681e482f364404cf93366e58" kindref="member">pub_get_qos</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>struct<sp/>SWriterQOSC*<sp/>qos_);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="353" refid="d4/d19/ecal__clang_8h_1a8cb6f20f940c0e54231c78e47c5bc920" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a8cb6f20f940c0e54231c78e47c5bc920" kindref="member">pub_set_layer_mode</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layer_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode_);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="365" refid="d4/d19/ecal__clang_8h_1ad7cad459dd949ef83ec948ce20d8da1d" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ad7cad459dd949ef83ec948ce20d8da1d" kindref="member">pub_set_max_bandwidth_udp</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bandwidth_);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="379" refid="d4/d19/ecal__clang_8h_1a0e2c1a29a1336083f2d19db5a1a2d4d1" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a0e2c1a29a1336083f2d19db5a1a2d4d1" kindref="member">pub_send</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>payload_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_,<sp/>const<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time_);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="396" refid="d4/d19/ecal__clang_8h_1a771d86ab58f9ccfe0152329f93238da7" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a771d86ab58f9ccfe0152329f93238da7" kindref="member">pub_send_sync</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>payload_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_,<sp/>const<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time_,<sp/>const<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>acknowledge_timeout_ms_);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="410" refid="d4/d19/ecal__clang_8h_1a826c12557d26a778aeca0900e0026dd6" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a826c12557d26a778aeca0900e0026dd6" kindref="member">pub_add_event_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>enum<sp/>eCAL_Publisher_Event<sp/>type_,<sp/>const<sp/>PubEventCallbackCT<sp/>callback_,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par_);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="422" refid="d4/d19/ecal__clang_8h_1a3c4548baa30604c6f790adb4cc2c3438" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a3c4548baa30604c6f790adb4cc2c3438" kindref="member">pub_rem_event_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>enum<sp/>eCAL_Publisher_Event<sp/>type_);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>subscriber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="437" refid="d4/d19/ecal__clang_8h_1a1831f04989002bff9548bfc18f35bcc0" refkind="member"><highlight class="normal">ECAL_API<sp/><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/><ref refid="d4/d19/ecal__clang_8h_1a1831f04989002bff9548bfc18f35bcc0" kindref="member">sub_create</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_type_);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="448" refid="d4/d19/ecal__clang_8h_1afe3c3a74ccfa61f0d811befc8d40f60a" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1afe3c3a74ccfa61f0d811befc8d40f60a" kindref="member">sub_destroy</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="460" refid="d4/d19/ecal__clang_8h_1abc7e3b35431d935887d7484a390362d7" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1abc7e3b35431d935887d7484a390362d7" kindref="member">sub_set_qos</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>struct<sp/>SReaderQOSC<sp/>qos_);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="472" refid="d4/d19/ecal__clang_8h_1abc58eef47fc5fa983d5d8a72af212a14" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1abc58eef47fc5fa983d5d8a72af212a14" kindref="member">sub_get_qos</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>struct<sp/>SReaderQOSC*<sp/>qos_);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="488" refid="d4/d19/ecal__clang_8h_1a1ec1f718a0335eb6844c47e3f58c2398" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a1ec1f718a0335eb6844c47e3f58c2398" kindref="member">sub_receive</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>rcv_buf_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rcv_buf_len_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>rcv_time_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="504" refid="d4/d19/ecal__clang_8h_1ac6cdc9785b833cd571c373aab28794d2" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ac6cdc9785b833cd571c373aab28794d2" kindref="member">sub_receive_buffer</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>rcv_buf_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rcv_buf_len_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>rcv_time_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="517" refid="d4/d19/ecal__clang_8h_1a67be84fdf2f94a25f18d4bcb58f66551" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a67be84fdf2f94a25f18d4bcb58f66551" kindref="member">sub_add_receive_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/>ReceiveCallbackCT<sp/>callback_,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par_);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="528" refid="d4/d19/ecal__clang_8h_1a5423009de750bc100d6fd3ff088f20f1" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a5423009de750bc100d6fd3ff088f20f1" kindref="member">sub_rem_receive_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="542" refid="d4/d19/ecal__clang_8h_1aa157db0be5fa32d82450030b094cf0bd" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1aa157db0be5fa32d82450030b094cf0bd" kindref="member">sub_add_event_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>enum<sp/>eCAL_Subscriber_Event<sp/>type_,<sp/>const<sp/>SubEventCallbackCT<sp/>callback_,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par_);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="554" refid="d4/d19/ecal__clang_8h_1a326dd7ba23bbd7df7c28038a5914928d" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a326dd7ba23bbd7df7c28038a5914928d" kindref="member">sub_rem_event_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>enum<sp/>eCAL_Subscriber_Event<sp/>type_);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="567" refid="d4/d19/ecal__clang_8h_1aeb563351d862ff01fb009e307d76292d" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1aeb563351d862ff01fb009e307d76292d" kindref="member">sub_set_timeout</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>dyn_json_subscriber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="581" refid="d4/d19/ecal__clang_8h_1a829d5fbcae1f370afe411a44065fbcd3" refkind="member"><highlight class="normal">ECAL_API<sp/><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/><ref refid="d4/d19/ecal__clang_8h_1a829d5fbcae1f370afe411a44065fbcd3" kindref="member">dyn_json_sub_create</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic_name_);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="592" refid="d4/d19/ecal__clang_8h_1a0aed2c922b11b65e57b28055de17c421" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a0aed2c922b11b65e57b28055de17c421" kindref="member">dyn_json_sub_destroy</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="605" refid="d4/d19/ecal__clang_8h_1ada98267a58dec836697704b3c495d580" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ada98267a58dec836697704b3c495d580" kindref="member">dyn_json_sub_add_receive_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/>ReceiveCallbackCT<sp/>callback_,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par_);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="616" refid="d4/d19/ecal__clang_8h_1ad5563ed5725905ab6cb5266f3000813f" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ad5563ed5725905ab6cb5266f3000813f" kindref="member">dyn_json_sub_rem_receive_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>not<sp/>implemented<sp/>and<sp/>not<sp/>used<sp/>for<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//ECAL_API<sp/>bool<sp/>dyn_json_sub_add_event_callback(ECAL_HANDLE<sp/>handle_,<sp/>enum<sp/>eCAL_Subscriber_Event<sp/>type_,<sp/>const<sp/>EventCallbackCT<sp/>callback_,<sp/>void*<sp/>par_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//ECAL_API<sp/>bool<sp/>dyn_json_sub_rem_event_callback(ECAL_HANDLE<sp/>handle_,<sp/>enum<sp/>eCAL_Subscriber_Event<sp/>type_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//ECAL_API<sp/>bool<sp/>dyn_json_sub_set_timeout(ECAL_HANDLE<sp/>handle_,<sp/>int<sp/>timeout_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>service<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="635" refid="d4/d19/ecal__clang_8h_1a877acafc2048df1d6e9e197e5ce85caf" refkind="member"><highlight class="normal">ECAL_API<sp/><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/><ref refid="d4/d19/ecal__clang_8h_1a877acafc2048df1d6e9e197e5ce85caf" kindref="member">server_create</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>service_name_);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="646" refid="d4/d19/ecal__clang_8h_1a06eaa7aa946da64ff339bc07bdf1f635" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a06eaa7aa946da64ff339bc07bdf1f635" kindref="member">server_destroy</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="662" refid="d4/d19/ecal__clang_8h_1ae6d216f6f783783ef482782995a7ebcb" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ae6d216f6f783783ef482782995a7ebcb" kindref="member">server_add_method_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>req_type_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>resp_type_,<sp/>const<sp/>MethodCallbackCT<sp/>callback_,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par_);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="674" refid="d4/d19/ecal__clang_8h_1a0a877a4b626654a13403022e8f2d7447" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a0a877a4b626654a13403022e8f2d7447" kindref="member">server_rem_method_callback</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method_name_);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="685" refid="d4/d19/ecal__clang_8h_1a10bdcde88fbe9b6c7491b2b3ba794e4e" refkind="member"><highlight class="normal">ECAL_API<sp/><ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/><ref refid="d4/d19/ecal__clang_8h_1a10bdcde88fbe9b6c7491b2b3ba794e4e" kindref="member">client_create</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>service_name_);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="696" refid="d4/d19/ecal__clang_8h_1a7acefeb93d842698df5ade150870d107" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a7acefeb93d842698df5ade150870d107" kindref="member">client_destroy</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="708" refid="d4/d19/ecal__clang_8h_1ade6b59f214874534a6518be2f186eaa0" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ade6b59f214874534a6518be2f186eaa0" kindref="member">client_set_hostname</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>host_name_);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="723" refid="d4/d19/ecal__clang_8h_1a8f33dfb4c563e82391cb4a0e3d1b0089" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a8f33dfb4c563e82391cb4a0e3d1b0089" kindref="member">client_call_method</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>request_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_len_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="738" refid="d4/d19/ecal__clang_8h_1a7b5e4e316b89e78eef3da213d4f9dd8d" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a7b5e4e316b89e78eef3da213d4f9dd8d" kindref="member">client_call_method_async</ref>(<ref refid="d3/d8d/ecalc__types_8h_1a6801786d75d8af7f213d45239018884b" kindref="member">ECAL_HANDLE</ref><sp/>handle_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method_name_,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>request_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_len_,<sp/>const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>not<sp/>implemented<sp/>and<sp/>not<sp/>used<sp/>for<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment">//ECAL_API<sp/>client_add_response_callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//ECAL_API<sp/>client_rem_response_callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>monitoring<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="755" refid="d4/d19/ecal__clang_8h_1ad7fb789b30d8884c876eee8c0bfdb6b7" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ad7fb789b30d8884c876eee8c0bfdb6b7" kindref="member">mon_initialize</ref>();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="764" refid="d4/d19/ecal__clang_8h_1ac165329dc942cd7404144c1347254466" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ac165329dc942cd7404144c1347254466" kindref="member">mon_finalize</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="775" refid="d4/d19/ecal__clang_8h_1a231586e73852b9f617c11156a617bf63" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a231586e73852b9f617c11156a617bf63" kindref="member">mon_set_excl_filter</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filter_);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="786" refid="d4/d19/ecal__clang_8h_1ab79620db2c3a73f17c5e91fe766b62a8" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ab79620db2c3a73f17c5e91fe766b62a8" kindref="member">mon_set_incl_filter</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filter_);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="797" refid="d4/d19/ecal__clang_8h_1ae4866992ca07ca8bdc77c458c7c0d6a1" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1ae4866992ca07ca8bdc77c458c7c0d6a1" kindref="member">mon_set_filter_state</ref>(const<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state_);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="826" refid="d4/d19/ecal__clang_8h_1a9a8ce626e7c7ceb6f4c5ce5b44512212" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a9a8ce626e7c7ceb6f4c5ce5b44512212" kindref="member">mon_get_monitoring</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>mon_buf_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mon_buf_len_);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><ref refid="dc/de4/ecal__deprecate_8h_1af43a13501449f4cec468e5fb7b4e96f7" kindref="member">ECAL_DEPRECATE_SINCE_5_13</ref>(&quot;Will<sp/>be<sp/>removed<sp/>in<sp/>future<sp/>eCAL<sp/>versions.&quot;)</highlight></codeline>
<codeline lineno="839" refid="d4/d19/ecal__clang_8h_1a98af3629ed3891b91b34d62071e68f53" refkind="member"><highlight class="normal">ECAL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d4/d19/ecal__clang_8h_1a98af3629ed3891b91b34d62071e68f53" kindref="member">mon_get_logging</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>log_buf_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>log_buf_len_);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ECAL_CLANG_H_INCLUDED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/lu/luca@Nextcloud/Programming/Conti/Praktikum/ecal/ecal/core/include/ecal/ecal_clang.h"/>
  </compounddef>
</doxygen>
